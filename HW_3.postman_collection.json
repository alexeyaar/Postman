{
	"info": {
		"_postman_id": "92b524c8-7072-42f4-ba9a-b711b47916e5",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    let resp = pm.response.json()\r",
							"    pm.environment.set('token', resp.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Bob",
							"type": "default"
						},
						{
							"key": "password",
							"value": "Bob123",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"1) Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"   let resp = pm.response.json()\r",
							"pm.test(\"2.Проверка структуры json в ответе.(start_qa_salary)\", function () {\r",
							"pm.expect(resp).to.have.property(\"start_qa_salary\");});\r",
							"\r",
							"pm.test(\"3.Проверка структуры json в ответе.(qa_salary_after_6_months)\", function () {\r",
							"pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");});\r",
							"\r",
							"pm.test(\"4.Проверка структуры json в ответе.(qa_salary_after_12_months)\", function () {\r",
							"pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");});\r",
							"\r",
							"pm.test(\"5.Проверка структуры json в ответе.(person)\", function () {\r",
							"pm.expect(resp).to.have.property(\"person\");});\r",
							"\r",
							"pm.test(\"6.Проверка структуры json в ответе.(u_name)\", function () {\r",
							"pm.expect(resp.person).to.have.property(\"u_name\");});\r",
							"\r",
							"\r",
							"pm.test(\"7. resp.qa_salary_after_12_months = salary * 2.9\", function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(5000*2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"8. resp.qa_salary_after_6_months = salary * 2\", function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(5000*2);\r",
							"});\r",
							"\r",
							"pm.test(\"9. resp.qa_salary_after_1_5_year = salary * 4\", function () {\r",
							"    pm.expect(resp.person.u_salary_1_5_year).to.eql(5000*4);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"salary_1_5_year\", resp.person.u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"age\":20,\r\n\"salary\":5000,\r\n\"name\":\"Bob\",\r\n\"auth_token\": \"/s34lfgbj/Bob/jjd909/38122kjkWpqc2957Bob123454034evny\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"1. Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json()\r",
							"\r",
							"pm.test(\"3.Проверка структуры json в ответе.(name)\", function () {\r",
							"pm.expect(resp).to.have.property(\"name\");});\r",
							"\r",
							"pm.test(\"4.Проверка структуры json в ответе.(age)\", function () {\r",
							"pm.expect(resp).to.have.property(\"age\");});\r",
							"\r",
							"pm.test(\"5.Проверка структуры json в ответе.(salary)\", function () {\r",
							"pm.expect(resp).to.have.property(\"salary\");});\r",
							"\r",
							"pm.test(\"6. salary*2\", function () {\r",
							"    pm.expect(+resp.salary[1]).to.eql(5000*2);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"7. salary*3\", function () {\r",
							"    pm.expect(+resp.salary[2]).to.eql(5000*3);\r",
							"\r",
							"});\r",
							"\r",
							"// 4) проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"\r",
							"let sal0 = resp.salary[0]\r",
							"let sal1 = resp.salary[1]\r",
							"let sal2 = resp.salary[2]\r",
							"\r",
							"if (sal0 <sal1){\r",
							"    console.log(\"Первый  элемент больше  нулевого \")\r",
							"}else {\r",
							"    console.log(\"Неверные расчеты!\")\r",
							"}\r",
							"if (sal1 <sal2){\r",
							"    console.log(\"Второй больше первого \")\r",
							"}else {\r",
							"    console.log(\"Неверные расчеты!\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Bob",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "default"
						},
						{
							"key": "auth_token ",
							"value": "{{token}}",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"1. Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp = pm.response.json()\r",
							"pm.test(\"2.Проверка структуры json в ответе.(name)\", function () {\r",
							"pm.expect(resp).to.have.property(\"name\");});\r",
							"\r",
							"pm.test(\"3.Проверка структуры json в ответе.(age)\", function () {\r",
							"pm.expect(resp).to.have.property(\"age\");});\r",
							"\r",
							"pm.test(\"4.Проверка структуры json в ответе.(daily_food)\", function () {\r",
							"pm.expect(resp).to.have.property(\"daily_food\");});\r",
							"\r",
							"pm.test(\"5.Проверка структуры json в ответе.(daily_sleep)\", function () {\r",
							"pm.expect(resp).to.have.property(\"daily_sleep\");});\r",
							"\r",
							"pm.test(\"6. weight * 0.012 \", function () {\r",
							"pm.expect(+resp.daily_food).to.eql(80*0.012);});\r",
							"\r",
							"pm.test(\"7. weight * 2.5 \", function () {\r",
							"pm.expect(+resp.daily_sleep).to.eql(80*2.5);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "default"
						},
						{
							"key": "weight",
							"value": "80",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Bob",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"1. Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp = pm.response.json()\r",
							"let req = pm.request.body.formdata.toObject()\r",
							"\r",
							"pm.test(\" 2. Проверка структуры json в ответе.(name)\", function () {\r",
							"pm.expect(resp).to.have.property(\"name\");});\r",
							"\r",
							"pm.test(\" Проверка структуры json в ответе.(age)\", function () {\r",
							"pm.expect(resp).to.have.property(\"age\");});\r",
							"\r",
							"pm.test(\" Проверка структуры json в ответе.(salary)\", function () {\r",
							"pm.expect(resp).to.have.property(\"salary\");});\r",
							"\r",
							"pm.test(\" Проверка структуры json в ответе.(family)\", function () {\r",
							"pm.expect(resp).to.have.property(\"family\");});\r",
							"\r",
							"pm.test(\" Проверка структуры json в ответе.(family)\", function () {\r",
							"pm.expect(resp.family).to.have.property(\"children\");});\r",
							"\r",
							"pm.test(\" Проверка структуры json в ответе.(family)\", function () {\r",
							"pm.expect(resp.family).to.have.property(\"u_salary_1_5_year\");});\r",
							"   \r",
							"    let name = pm.environment.get(\"name\");\r",
							"\r",
							"pm.test(\"3) Проверить что занчение поля name = значению переменной name из окружения\", function () {\r",
							"    pm.expect(resp.name).to.eql(name);\r",
							"});\r",
							"\r",
							"pm.test(\"4) Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\", function () {\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary_1_5_year}}",
							"type": "default"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Bob/jjd909/38122kjkWpqc2957Bob123454034evny",
							"type": "default"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"1. Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json()\r",
							"pm.test(\"2.Проверка структуры json в ответе.\", function () {\r",
							"pm.expect(resp).to.have.property(\"Cur_Abbreviation\");});\r",
							"\r",
							"pm.test(\"3.Проверка структуры json в ответе.\", function () {\r",
							"pm.expect(resp).to.have.property(\"Cur_ID\");});\r",
							"\r",
							"pm.test(\"4.Проверка структуры json в ответе.\", function () {\r",
							"pm.expect(resp).to.have.property(\"Cur_Name\");});\r",
							"\r",
							"pm.test(\"5.Проверка структуры json в ответе.\", function () {\r",
							"pm.expect(resp).to.have.property(\"Cur_OfficialRate\");});\r",
							"\r",
							"pm.test(\"6.Проверка структуры json в ответе.\", function () {\r",
							"pm.expect(resp).to.have.property(\"Cur_Scale\");});\r",
							"\r",
							"pm.test(\"7.Проверка структуры json в ответе.\", function () {\r",
							"pm.expect(resp).to.have.property(\"Date\");});\r",
							"\r",
							"pm.test(\"8.Проверка структуры json в ответе\", function () {\r",
							"pm.response.to.have.jsonSchema(resp);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "default"
						},
						{
							"key": "curr_code",
							"value": "{{cur}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}